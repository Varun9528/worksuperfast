"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/use-places-autocomplete";
exports.ids = ["vendor-chunks/use-places-autocomplete"];
exports.modules = {

/***/ "(ssr)/./node_modules/use-places-autocomplete/dist/index.esm.js":
/*!****************************************************************!*\
  !*** ./node_modules/use-places-autocomplete/dist/index.esm.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ usePlacesAutocomplete),\n/* harmony export */   getDetails: () => (/* binding */ getDetails),\n/* harmony export */   getGeocode: () => (/* binding */ getGeocode),\n/* harmony export */   getLatLng: () => (/* binding */ getLatLng),\n/* harmony export */   getZipCode: () => (/* binding */ getZipCode)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar useLatest = (function (val) {\n  var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(val);\n  ref.current = val;\n  return ref;\n});\n\nvar _debounce = (function (fn, delay) {\n  var timer; // eslint-disable-next-line func-names\n\n  return function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (timer !== null) {\n      clearTimeout(timer);\n      timer = null;\n    }\n\n    timer = setTimeout(function () {\n      return fn.apply(_this, args);\n    }, delay);\n  };\n});\n\nvar loadApiErr = \"ðŸ’¡ use-places-autocomplete: Google Maps Places API library must be loaded. See: https://github.com/wellyshen/use-places-autocomplete#load-the-library\";\n\nvar usePlacesAutocomplete = function usePlacesAutocomplete(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      requestOptions = _ref.requestOptions,\n      _ref$debounce = _ref.debounce,\n      debounce = _ref$debounce === void 0 ? 200 : _ref$debounce,\n      _ref$cache = _ref.cache,\n      cache = _ref$cache === void 0 ? 24 * 60 * 60 : _ref$cache,\n      _ref$cacheKey = _ref.cacheKey,\n      cacheKey = _ref$cacheKey === void 0 ? \"upa\" : _ref$cacheKey,\n      googleMaps = _ref.googleMaps,\n      callbackName = _ref.callbackName,\n      _ref$defaultValue = _ref.defaultValue,\n      defaultValue = _ref$defaultValue === void 0 ? \"\" : _ref$defaultValue,\n      _ref$initOnMount = _ref.initOnMount,\n      initOnMount = _ref$initOnMount === void 0 ? true : _ref$initOnMount;\n\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),\n      ready = _useState[0],\n      setReady = _useState[1];\n\n  var _useState2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultValue),\n      value = _useState2[0],\n      setVal = _useState2[1];\n\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    loading: false,\n    status: \"\",\n    data: []\n  }),\n      suggestions = _useState3[0],\n      setSuggestions = _useState3[1];\n\n  var asRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  var requestOptionsRef = useLatest(requestOptions);\n  var googleMapsRef = useLatest(googleMaps);\n  var init = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    var _google$maps;\n\n    if (asRef.current) return;\n    var _window = window,\n        google = _window.google;\n    var gMaps = googleMapsRef.current;\n    var placesLib = (gMaps == null ? void 0 : gMaps.places) || (google == null ? void 0 : (_google$maps = google.maps) == null ? void 0 : _google$maps.places);\n\n    if (!placesLib) {\n      console.error(loadApiErr);\n      return;\n    }\n\n    asRef.current = new placesLib.AutocompleteService();\n    setReady(true);\n  }, [googleMapsRef]);\n  var clearSuggestions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    setSuggestions({\n      loading: false,\n      status: \"\",\n      data: []\n    });\n  }, []);\n  var clearCache = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (key) {\n    if (key === void 0) {\n      key = cacheKey;\n    }\n\n    try {\n      sessionStorage.removeItem(key);\n    } catch (error) {// Skip exception\n    }\n  }, [cacheKey]); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  var fetchPredictions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(_debounce(function (val) {\n    var _asRef$current;\n\n    if (!val) {\n      clearSuggestions();\n      return;\n    }\n\n    setSuggestions(function (prevState) {\n      return _extends({}, prevState, {\n        loading: true\n      });\n    });\n    var cachedData = {};\n\n    try {\n      cachedData = JSON.parse(sessionStorage.getItem(cacheKey) || \"{}\");\n    } catch (error) {// Skip exception\n    }\n\n    if (cache) {\n      cachedData = Object.keys(cachedData).reduce(function (acc, key) {\n        if (cachedData[key].maxAge - Date.now() >= 0) acc[key] = cachedData[key];\n        return acc;\n      }, {});\n\n      if (cachedData[val]) {\n        setSuggestions({\n          loading: false,\n          status: \"OK\",\n          data: cachedData[val].data\n        });\n        return;\n      }\n    }\n\n    (_asRef$current = asRef.current) == null ? void 0 : _asRef$current.getPlacePredictions(_extends({}, requestOptionsRef.current, {\n      input: val\n    }), function (data, status) {\n      setSuggestions({\n        loading: false,\n        status: status,\n        data: data || []\n      });\n\n      if (cache && status === \"OK\") {\n        cachedData[val] = {\n          data: data,\n          maxAge: Date.now() + cache * 1000\n        };\n\n        try {\n          sessionStorage.setItem(cacheKey, JSON.stringify(cachedData));\n        } catch (error) {// Skip exception\n        }\n      }\n    });\n  }, debounce), [cache, cacheKey, clearSuggestions, requestOptionsRef]);\n  var setValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (val, shouldFetchData) {\n    if (shouldFetchData === void 0) {\n      shouldFetchData = true;\n    }\n\n    setVal(val);\n    if (asRef.current && shouldFetchData) fetchPredictions(val);\n  }, [fetchPredictions]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (!initOnMount) return function () {\n      return null;\n    };\n    var _window2 = window,\n        google = _window2.google;\n\n    if (!googleMapsRef.current && !(google != null && google.maps) && callbackName) {\n      window[callbackName] = init;\n    } else {\n      init();\n    }\n\n    return function () {\n      // @ts-ignore\n      if (window[callbackName]) delete window[callbackName];\n    };\n  }, [callbackName, googleMapsRef, init, initOnMount]);\n  return {\n    ready: ready,\n    value: value,\n    suggestions: suggestions,\n    setValue: setValue,\n    clearSuggestions: clearSuggestions,\n    clearCache: clearCache,\n    init: init\n  };\n};\n\n/* eslint-disable compat/compat */\nvar geocodeErr = \"ðŸ’¡ use-places-autocomplete: Please provide an address when using getGeocode() with the componentRestrictions.\";\nvar getGeocode = function getGeocode(args) {\n  var geocoder = new window.google.maps.Geocoder();\n  return new Promise(function (resolve, reject) {\n    geocoder.geocode(args, function (results, status) {\n      if (status !== \"OK\") reject(status);\n\n      if (!args.address && args.componentRestrictions) {\n        console.error(geocodeErr);\n        resolve(results);\n      }\n\n      resolve(results);\n    });\n  });\n};\nvar getLatLng = function getLatLng(result) {\n  var _result$geometry$loca = result.geometry.location,\n      lat = _result$geometry$loca.lat,\n      lng = _result$geometry$loca.lng;\n  return {\n    lat: lat(),\n    lng: lng()\n  };\n};\nvar getZipCode = function getZipCode(result, useShortName) {\n  var foundZip = result.address_components.find(function (_ref) {\n    var types = _ref.types;\n    return types.includes(\"postal_code\");\n  });\n  if (!foundZip) return undefined;\n  return useShortName ? foundZip.short_name : foundZip.long_name;\n};\nvar getDetailsErr = \"ðŸ’¡ use-places-autocomplete: Please provide a place Id when using getDetails() either as a string or as part of an Autocomplete Prediction.\";\nvar getDetails = function getDetails(args) {\n  var PlacesService = new window.google.maps.places.PlacesService(document.createElement(\"div\"));\n\n  if (!args.placeId) {\n    console.error(getDetailsErr);\n    return Promise.reject(getDetailsErr);\n  }\n\n  return new Promise(function (resolve, reject) {\n    PlacesService.getDetails(args, function (results, status) {\n      if (status !== \"OK\") reject(status);\n      resolve(results);\n    });\n  });\n};\n\n\n//# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdXNlLXBsYWNlcy1hdXRvY29tcGxldGUvZGlzdC9pbmRleC5lc20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFpRTs7QUFFakU7QUFDQTtBQUNBLG9CQUFvQixzQkFBc0I7QUFDMUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFlBQVksNkNBQU07QUFDbEI7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQSxhQUFhOztBQUViO0FBQ0E7O0FBRUEsd0VBQXdFLGFBQWE7QUFDckY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRDs7QUFFQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsK0NBQVE7QUFDMUI7QUFDQTs7QUFFQSxtQkFBbUIsK0NBQVE7QUFDM0I7QUFDQTs7QUFFQSxtQkFBbUIsK0NBQVE7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUEsY0FBYyw2Q0FBTTtBQUNwQjtBQUNBO0FBQ0EsYUFBYSxrREFBVztBQUN4Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gseUJBQXlCLGtEQUFXO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCxtQkFBbUIsa0RBQVc7QUFDOUI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNLGVBQWU7QUFDckI7QUFDQSxHQUFHLGVBQWU7O0FBRWxCLHlCQUF5QixrREFBVztBQUNwQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7O0FBRUE7QUFDQSxxRUFBcUU7QUFDckUsTUFBTSxlQUFlO0FBQ3JCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxJQUFJOztBQUVYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBLHNHQUFzRztBQUN0RztBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsVUFBVSxlQUFlO0FBQ3pCO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNILGlCQUFpQixrREFBVztBQUM1QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSCxFQUFFLGdEQUFTO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFMkY7QUFDM0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcUkFKIFRPTUFSXFxNdXNpY1xcd29ya3N1cGVyZmFzdFxcd29ya3N1cGVyZmFzdFxcbm9kZV9tb2R1bGVzXFx1c2UtcGxhY2VzLWF1dG9jb21wbGV0ZVxcZGlzdFxcaW5kZXguZXNtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVJlZiwgdXNlU3RhdGUsIHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5cbnZhciB1c2VMYXRlc3QgPSAoZnVuY3Rpb24gKHZhbCkge1xuICB2YXIgcmVmID0gdXNlUmVmKHZhbCk7XG4gIHJlZi5jdXJyZW50ID0gdmFsO1xuICByZXR1cm4gcmVmO1xufSk7XG5cbnZhciBfZGVib3VuY2UgPSAoZnVuY3Rpb24gKGZuLCBkZWxheSkge1xuICB2YXIgdGltZXI7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGlmICh0aW1lciAhPT0gbnVsbCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgIHRpbWVyID0gbnVsbDtcbiAgICB9XG5cbiAgICB0aW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGZuLmFwcGx5KF90aGlzLCBhcmdzKTtcbiAgICB9LCBkZWxheSk7XG4gIH07XG59KTtcblxudmFyIGxvYWRBcGlFcnIgPSBcIvCfkqEgdXNlLXBsYWNlcy1hdXRvY29tcGxldGU6IEdvb2dsZSBNYXBzIFBsYWNlcyBBUEkgbGlicmFyeSBtdXN0IGJlIGxvYWRlZC4gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vd2VsbHlzaGVuL3VzZS1wbGFjZXMtYXV0b2NvbXBsZXRlI2xvYWQtdGhlLWxpYnJhcnlcIjtcblxudmFyIHVzZVBsYWNlc0F1dG9jb21wbGV0ZSA9IGZ1bmN0aW9uIHVzZVBsYWNlc0F1dG9jb21wbGV0ZShfdGVtcCkge1xuICB2YXIgX3JlZiA9IF90ZW1wID09PSB2b2lkIDAgPyB7fSA6IF90ZW1wLFxuICAgICAgcmVxdWVzdE9wdGlvbnMgPSBfcmVmLnJlcXVlc3RPcHRpb25zLFxuICAgICAgX3JlZiRkZWJvdW5jZSA9IF9yZWYuZGVib3VuY2UsXG4gICAgICBkZWJvdW5jZSA9IF9yZWYkZGVib3VuY2UgPT09IHZvaWQgMCA/IDIwMCA6IF9yZWYkZGVib3VuY2UsXG4gICAgICBfcmVmJGNhY2hlID0gX3JlZi5jYWNoZSxcbiAgICAgIGNhY2hlID0gX3JlZiRjYWNoZSA9PT0gdm9pZCAwID8gMjQgKiA2MCAqIDYwIDogX3JlZiRjYWNoZSxcbiAgICAgIF9yZWYkY2FjaGVLZXkgPSBfcmVmLmNhY2hlS2V5LFxuICAgICAgY2FjaGVLZXkgPSBfcmVmJGNhY2hlS2V5ID09PSB2b2lkIDAgPyBcInVwYVwiIDogX3JlZiRjYWNoZUtleSxcbiAgICAgIGdvb2dsZU1hcHMgPSBfcmVmLmdvb2dsZU1hcHMsXG4gICAgICBjYWxsYmFja05hbWUgPSBfcmVmLmNhbGxiYWNrTmFtZSxcbiAgICAgIF9yZWYkZGVmYXVsdFZhbHVlID0gX3JlZi5kZWZhdWx0VmFsdWUsXG4gICAgICBkZWZhdWx0VmFsdWUgPSBfcmVmJGRlZmF1bHRWYWx1ZSA9PT0gdm9pZCAwID8gXCJcIiA6IF9yZWYkZGVmYXVsdFZhbHVlLFxuICAgICAgX3JlZiRpbml0T25Nb3VudCA9IF9yZWYuaW5pdE9uTW91bnQsXG4gICAgICBpbml0T25Nb3VudCA9IF9yZWYkaW5pdE9uTW91bnQgPT09IHZvaWQgMCA/IHRydWUgOiBfcmVmJGluaXRPbk1vdW50O1xuXG4gIHZhciBfdXNlU3RhdGUgPSB1c2VTdGF0ZShmYWxzZSksXG4gICAgICByZWFkeSA9IF91c2VTdGF0ZVswXSxcbiAgICAgIHNldFJlYWR5ID0gX3VzZVN0YXRlWzFdO1xuXG4gIHZhciBfdXNlU3RhdGUyID0gdXNlU3RhdGUoZGVmYXVsdFZhbHVlKSxcbiAgICAgIHZhbHVlID0gX3VzZVN0YXRlMlswXSxcbiAgICAgIHNldFZhbCA9IF91c2VTdGF0ZTJbMV07XG5cbiAgdmFyIF91c2VTdGF0ZTMgPSB1c2VTdGF0ZSh7XG4gICAgbG9hZGluZzogZmFsc2UsXG4gICAgc3RhdHVzOiBcIlwiLFxuICAgIGRhdGE6IFtdXG4gIH0pLFxuICAgICAgc3VnZ2VzdGlvbnMgPSBfdXNlU3RhdGUzWzBdLFxuICAgICAgc2V0U3VnZ2VzdGlvbnMgPSBfdXNlU3RhdGUzWzFdO1xuXG4gIHZhciBhc1JlZiA9IHVzZVJlZigpO1xuICB2YXIgcmVxdWVzdE9wdGlvbnNSZWYgPSB1c2VMYXRlc3QocmVxdWVzdE9wdGlvbnMpO1xuICB2YXIgZ29vZ2xlTWFwc1JlZiA9IHVzZUxhdGVzdChnb29nbGVNYXBzKTtcbiAgdmFyIGluaXQgPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAoKSB7XG4gICAgdmFyIF9nb29nbGUkbWFwcztcblxuICAgIGlmIChhc1JlZi5jdXJyZW50KSByZXR1cm47XG4gICAgdmFyIF93aW5kb3cgPSB3aW5kb3csXG4gICAgICAgIGdvb2dsZSA9IF93aW5kb3cuZ29vZ2xlO1xuICAgIHZhciBnTWFwcyA9IGdvb2dsZU1hcHNSZWYuY3VycmVudDtcbiAgICB2YXIgcGxhY2VzTGliID0gKGdNYXBzID09IG51bGwgPyB2b2lkIDAgOiBnTWFwcy5wbGFjZXMpIHx8IChnb29nbGUgPT0gbnVsbCA/IHZvaWQgMCA6IChfZ29vZ2xlJG1hcHMgPSBnb29nbGUubWFwcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9nb29nbGUkbWFwcy5wbGFjZXMpO1xuXG4gICAgaWYgKCFwbGFjZXNMaWIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobG9hZEFwaUVycik7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgYXNSZWYuY3VycmVudCA9IG5ldyBwbGFjZXNMaWIuQXV0b2NvbXBsZXRlU2VydmljZSgpO1xuICAgIHNldFJlYWR5KHRydWUpO1xuICB9LCBbZ29vZ2xlTWFwc1JlZl0pO1xuICB2YXIgY2xlYXJTdWdnZXN0aW9ucyA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uICgpIHtcbiAgICBzZXRTdWdnZXN0aW9ucyh7XG4gICAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICAgIHN0YXR1czogXCJcIixcbiAgICAgIGRhdGE6IFtdXG4gICAgfSk7XG4gIH0sIFtdKTtcbiAgdmFyIGNsZWFyQ2FjaGUgPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAoa2V5KSB7XG4gICAgaWYgKGtleSA9PT0gdm9pZCAwKSB7XG4gICAgICBrZXkgPSBjYWNoZUtleTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7Ly8gU2tpcCBleGNlcHRpb25cbiAgICB9XG4gIH0sIFtjYWNoZUtleV0pOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzXG5cbiAgdmFyIGZldGNoUHJlZGljdGlvbnMgPSB1c2VDYWxsYmFjayhfZGVib3VuY2UoZnVuY3Rpb24gKHZhbCkge1xuICAgIHZhciBfYXNSZWYkY3VycmVudDtcblxuICAgIGlmICghdmFsKSB7XG4gICAgICBjbGVhclN1Z2dlc3Rpb25zKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgc2V0U3VnZ2VzdGlvbnMoZnVuY3Rpb24gKHByZXZTdGF0ZSkge1xuICAgICAgcmV0dXJuIF9leHRlbmRzKHt9LCBwcmV2U3RhdGUsIHtcbiAgICAgICAgbG9hZGluZzogdHJ1ZVxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgdmFyIGNhY2hlZERhdGEgPSB7fTtcblxuICAgIHRyeSB7XG4gICAgICBjYWNoZWREYXRhID0gSlNPTi5wYXJzZShzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKGNhY2hlS2V5KSB8fCBcInt9XCIpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7Ly8gU2tpcCBleGNlcHRpb25cbiAgICB9XG5cbiAgICBpZiAoY2FjaGUpIHtcbiAgICAgIGNhY2hlZERhdGEgPSBPYmplY3Qua2V5cyhjYWNoZWREYXRhKS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywga2V5KSB7XG4gICAgICAgIGlmIChjYWNoZWREYXRhW2tleV0ubWF4QWdlIC0gRGF0ZS5ub3coKSA+PSAwKSBhY2Nba2V5XSA9IGNhY2hlZERhdGFba2V5XTtcbiAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgIH0sIHt9KTtcblxuICAgICAgaWYgKGNhY2hlZERhdGFbdmFsXSkge1xuICAgICAgICBzZXRTdWdnZXN0aW9ucyh7XG4gICAgICAgICAgbG9hZGluZzogZmFsc2UsXG4gICAgICAgICAgc3RhdHVzOiBcIk9LXCIsXG4gICAgICAgICAgZGF0YTogY2FjaGVkRGF0YVt2YWxdLmRhdGFcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAoX2FzUmVmJGN1cnJlbnQgPSBhc1JlZi5jdXJyZW50KSA9PSBudWxsID8gdm9pZCAwIDogX2FzUmVmJGN1cnJlbnQuZ2V0UGxhY2VQcmVkaWN0aW9ucyhfZXh0ZW5kcyh7fSwgcmVxdWVzdE9wdGlvbnNSZWYuY3VycmVudCwge1xuICAgICAgaW5wdXQ6IHZhbFxuICAgIH0pLCBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7XG4gICAgICBzZXRTdWdnZXN0aW9ucyh7XG4gICAgICAgIGxvYWRpbmc6IGZhbHNlLFxuICAgICAgICBzdGF0dXM6IHN0YXR1cyxcbiAgICAgICAgZGF0YTogZGF0YSB8fCBbXVxuICAgICAgfSk7XG5cbiAgICAgIGlmIChjYWNoZSAmJiBzdGF0dXMgPT09IFwiT0tcIikge1xuICAgICAgICBjYWNoZWREYXRhW3ZhbF0gPSB7XG4gICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICBtYXhBZ2U6IERhdGUubm93KCkgKyBjYWNoZSAqIDEwMDBcbiAgICAgICAgfTtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oY2FjaGVLZXksIEpTT04uc3RyaW5naWZ5KGNhY2hlZERhdGEpKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsvLyBTa2lwIGV4Y2VwdGlvblxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH0sIGRlYm91bmNlKSwgW2NhY2hlLCBjYWNoZUtleSwgY2xlYXJTdWdnZXN0aW9ucywgcmVxdWVzdE9wdGlvbnNSZWZdKTtcbiAgdmFyIHNldFZhbHVlID0gdXNlQ2FsbGJhY2soZnVuY3Rpb24gKHZhbCwgc2hvdWxkRmV0Y2hEYXRhKSB7XG4gICAgaWYgKHNob3VsZEZldGNoRGF0YSA9PT0gdm9pZCAwKSB7XG4gICAgICBzaG91bGRGZXRjaERhdGEgPSB0cnVlO1xuICAgIH1cblxuICAgIHNldFZhbCh2YWwpO1xuICAgIGlmIChhc1JlZi5jdXJyZW50ICYmIHNob3VsZEZldGNoRGF0YSkgZmV0Y2hQcmVkaWN0aW9ucyh2YWwpO1xuICB9LCBbZmV0Y2hQcmVkaWN0aW9uc10pO1xuICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIGlmICghaW5pdE9uTW91bnQpIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9O1xuICAgIHZhciBfd2luZG93MiA9IHdpbmRvdyxcbiAgICAgICAgZ29vZ2xlID0gX3dpbmRvdzIuZ29vZ2xlO1xuXG4gICAgaWYgKCFnb29nbGVNYXBzUmVmLmN1cnJlbnQgJiYgIShnb29nbGUgIT0gbnVsbCAmJiBnb29nbGUubWFwcykgJiYgY2FsbGJhY2tOYW1lKSB7XG4gICAgICB3aW5kb3dbY2FsbGJhY2tOYW1lXSA9IGluaXQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGluaXQoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgaWYgKHdpbmRvd1tjYWxsYmFja05hbWVdKSBkZWxldGUgd2luZG93W2NhbGxiYWNrTmFtZV07XG4gICAgfTtcbiAgfSwgW2NhbGxiYWNrTmFtZSwgZ29vZ2xlTWFwc1JlZiwgaW5pdCwgaW5pdE9uTW91bnRdKTtcbiAgcmV0dXJuIHtcbiAgICByZWFkeTogcmVhZHksXG4gICAgdmFsdWU6IHZhbHVlLFxuICAgIHN1Z2dlc3Rpb25zOiBzdWdnZXN0aW9ucyxcbiAgICBzZXRWYWx1ZTogc2V0VmFsdWUsXG4gICAgY2xlYXJTdWdnZXN0aW9uczogY2xlYXJTdWdnZXN0aW9ucyxcbiAgICBjbGVhckNhY2hlOiBjbGVhckNhY2hlLFxuICAgIGluaXQ6IGluaXRcbiAgfTtcbn07XG5cbi8qIGVzbGludC1kaXNhYmxlIGNvbXBhdC9jb21wYXQgKi9cbnZhciBnZW9jb2RlRXJyID0gXCLwn5KhIHVzZS1wbGFjZXMtYXV0b2NvbXBsZXRlOiBQbGVhc2UgcHJvdmlkZSBhbiBhZGRyZXNzIHdoZW4gdXNpbmcgZ2V0R2VvY29kZSgpIHdpdGggdGhlIGNvbXBvbmVudFJlc3RyaWN0aW9ucy5cIjtcbnZhciBnZXRHZW9jb2RlID0gZnVuY3Rpb24gZ2V0R2VvY29kZShhcmdzKSB7XG4gIHZhciBnZW9jb2RlciA9IG5ldyB3aW5kb3cuZ29vZ2xlLm1hcHMuR2VvY29kZXIoKTtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICBnZW9jb2Rlci5nZW9jb2RlKGFyZ3MsIGZ1bmN0aW9uIChyZXN1bHRzLCBzdGF0dXMpIHtcbiAgICAgIGlmIChzdGF0dXMgIT09IFwiT0tcIikgcmVqZWN0KHN0YXR1cyk7XG5cbiAgICAgIGlmICghYXJncy5hZGRyZXNzICYmIGFyZ3MuY29tcG9uZW50UmVzdHJpY3Rpb25zKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZ2VvY29kZUVycik7XG4gICAgICAgIHJlc29sdmUocmVzdWx0cyk7XG4gICAgICB9XG5cbiAgICAgIHJlc29sdmUocmVzdWx0cyk7XG4gICAgfSk7XG4gIH0pO1xufTtcbnZhciBnZXRMYXRMbmcgPSBmdW5jdGlvbiBnZXRMYXRMbmcocmVzdWx0KSB7XG4gIHZhciBfcmVzdWx0JGdlb21ldHJ5JGxvY2EgPSByZXN1bHQuZ2VvbWV0cnkubG9jYXRpb24sXG4gICAgICBsYXQgPSBfcmVzdWx0JGdlb21ldHJ5JGxvY2EubGF0LFxuICAgICAgbG5nID0gX3Jlc3VsdCRnZW9tZXRyeSRsb2NhLmxuZztcbiAgcmV0dXJuIHtcbiAgICBsYXQ6IGxhdCgpLFxuICAgIGxuZzogbG5nKClcbiAgfTtcbn07XG52YXIgZ2V0WmlwQ29kZSA9IGZ1bmN0aW9uIGdldFppcENvZGUocmVzdWx0LCB1c2VTaG9ydE5hbWUpIHtcbiAgdmFyIGZvdW5kWmlwID0gcmVzdWx0LmFkZHJlc3NfY29tcG9uZW50cy5maW5kKGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgdmFyIHR5cGVzID0gX3JlZi50eXBlcztcbiAgICByZXR1cm4gdHlwZXMuaW5jbHVkZXMoXCJwb3N0YWxfY29kZVwiKTtcbiAgfSk7XG4gIGlmICghZm91bmRaaXApIHJldHVybiB1bmRlZmluZWQ7XG4gIHJldHVybiB1c2VTaG9ydE5hbWUgPyBmb3VuZFppcC5zaG9ydF9uYW1lIDogZm91bmRaaXAubG9uZ19uYW1lO1xufTtcbnZhciBnZXREZXRhaWxzRXJyID0gXCLwn5KhIHVzZS1wbGFjZXMtYXV0b2NvbXBsZXRlOiBQbGVhc2UgcHJvdmlkZSBhIHBsYWNlIElkIHdoZW4gdXNpbmcgZ2V0RGV0YWlscygpIGVpdGhlciBhcyBhIHN0cmluZyBvciBhcyBwYXJ0IG9mIGFuIEF1dG9jb21wbGV0ZSBQcmVkaWN0aW9uLlwiO1xudmFyIGdldERldGFpbHMgPSBmdW5jdGlvbiBnZXREZXRhaWxzKGFyZ3MpIHtcbiAgdmFyIFBsYWNlc1NlcnZpY2UgPSBuZXcgd2luZG93Lmdvb2dsZS5tYXBzLnBsYWNlcy5QbGFjZXNTZXJ2aWNlKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpO1xuXG4gIGlmICghYXJncy5wbGFjZUlkKSB7XG4gICAgY29uc29sZS5lcnJvcihnZXREZXRhaWxzRXJyKTtcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZ2V0RGV0YWlsc0Vycik7XG4gIH1cblxuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgIFBsYWNlc1NlcnZpY2UuZ2V0RGV0YWlscyhhcmdzLCBmdW5jdGlvbiAocmVzdWx0cywgc3RhdHVzKSB7XG4gICAgICBpZiAoc3RhdHVzICE9PSBcIk9LXCIpIHJlamVjdChzdGF0dXMpO1xuICAgICAgcmVzb2x2ZShyZXN1bHRzKTtcbiAgICB9KTtcbiAgfSk7XG59O1xuXG5leHBvcnQgeyB1c2VQbGFjZXNBdXRvY29tcGxldGUgYXMgZGVmYXVsdCwgZ2V0RGV0YWlscywgZ2V0R2VvY29kZSwgZ2V0TGF0TG5nLCBnZXRaaXBDb2RlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lc20uanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/use-places-autocomplete/dist/index.esm.js\n");

/***/ })

};
;